#!/bin/sh

[ $# -lt 1 ] && exit 1

#set -x

#commandfile="/var/spool/nagios/rw/nagios.cmd"
#lockfile=$commandfile.lock

TIMEOUT=5
WAIT_FOR=5
#META_DIR=/home/monitor/work/local/passive1/

host="$1"
srv="dell_status"

GLOBAL_STATUS_OID="1.3.6.1.4.1.674.10893.1.20.110.13.0"
VDISK_STATUS_OID="1.3.6.1.4.1.674.10893.1.20.140.1.1.4.1"

SMART_ALERT_OID_BASE="1.3.6.1.4.1.674.10893.1.20.130.4.1.31" # 1 - 32
DISK_STATE_OID_BASE="1.3.6.1.4.1.674.10893.1.20.130.4.1.4" # 1 - 32

mes=""

die ()
{
    	descr=$2
#    	echo "[`date +%s`] PROCESS_SERVICE_CHECK_RESULT;$host;$srv;$err_cod;$descr" >> $META_DIR/$host
    	#echo "[`date +%s`] PROCESS_SERVICE_CHECK_RESULT;$host;$srv;$err_cod;$descr" 
        echo $1
        zabbix_sender -s $host -c /etc/zabbix/zabbix_agentd.conf -k snmp-dell.message -o "$2" > /dev/null
#        echo $2 1>&2
	exit
}

err_c=0

no_answer=0
#echo "/usr/bin/snmpget -v1 -c public -t $TIMEOUT $host $GLOBAL_STATUS_OID"
#exit
set -- `/usr/bin/snmpget -v1 -c public -t $TIMEOUT $host $GLOBAL_STATUS_OID 2>/dev/null`

if [ -z "$*" ]
then
	no_answer=1
else
	shift
	shift
	shift
	global_status="$*"
	no_answer=0
fi

if [ $no_answer -eq 0 ]
then
	if [ $global_status -eq 5 ] 
	then
		mes="global status is critical"
		err_c=2
	fi

	if [ $global_status -ne 3 ] 
	then
		if [ $err_c -ne 2 ]
		then
			mes="global status is warning"
			err_c=1
		fi
	fi

	if [ $global_status -eq 3 ] 
	then
		mes="global status is ok"
	fi
fi

#sleep 1

set -- `/usr/bin/snmpget -v1 -c public -t $TIMEOUT $host $VDISK_STATUS_OID 2>/dev/null`

if [ -z "$*" ]
then
	[ $no_answer -eq 0 ] || no_answer=1
else
	shift
	shift
	shift
	vdisk_status="$*"
	no_answer=0

	case $vdisk_status in
		1)	
			[ $err_c -eq 0 ] && err_c=0
			;;
		3)	
			[ $err_c -eq 0 ] && err_c=0
			;;
		39)	
			[ $err_c -eq 0 ] && err_c=0
			;;
		2)
			mes="$mes, virtual disk is failed"
			err_c=2
			;;
		4)
			mes="$mes, virtual disk is offline"
			err_c=2
			;;
		6)
			mes="$mes, virtual disk is degraded"
			err_c=2
			;;
		*)
			mes="$mes, virtual disk is warning"
			[ $err_c -ne 2 ] && err_c=1
			;;
	esac
fi

#sleep 1

[ $no_answer -eq 1 ] && die 2 "No answer from dell via snmp"

i=1
/usr/bin/snmpwalk -v1 -c public -t $TIMEOUT $host $SMART_ALERT_OID_BASE 2>/dev/null | \
while read; do
	set -- $REPLY

	if [ -z "$*" ]
	then
		[ $no_answer -eq 0 ] || no_answer=1
	else
		shift
		shift
		shift
		smart_alert="$*"
		no_answer=0
		if [ $smart_alert -ne 1 ]
		then 
			mes="$mes, $i disk has smart alert"
			[ $err_c -ne 2 ] && err_c=1
		fi
	fi
        i=$((i+1))
done

[ $no_answer -eq 1 ] && die 2 "No answer from dell via snmp"

i=1
/usr/bin/snmpwalk -v1 -c public -t $TIMEOUT $host $DISK_STATE_OID_BASE 2>/dev/null | \
while read; do
	set -- $REPLY
	if [ -z "$*" ]
	then
		[ $no_answer -eq 0 ] || no_answer=1
	else
		shift
		shift
		shift
		disk_state="$*"
		no_answer=0

		case $disk_state in
			1)	
				[ $err_c -eq 0 ] && err_c=0
				;;
			3)	
				[ $err_c -eq 0 ] && err_c=0
				;;
			39)	
				mes="$mes, disk $i is foreign"
				err_c=2
				;;
			2)
				mes="$mes, disk $i is failed"
				err_c=2
				;;
			4)
				mes="$mes, disk $i is offline"
				err_c=2
				;;
			6)
				mes="$mes, disk $i is degraded"
				err_c=2
				;;
			*)
				mes="$mes, disk $i is warning"
				[ $err_c -ne 2 ] && err_c=1
				;;
		esac
	fi
        i=$((i+1))
#        echo $i
done

die $err_c "$mes"

exit
