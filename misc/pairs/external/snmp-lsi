#!/bin/sh

[ $# -lt 1 ] && exit 1

TIMEOUT=5

host="$1"

VD_DEGRADED="1.3.6.1.4.1.3582.4.1.4.1.2.1.19";
VD_OFFLINE="1.3.6.1.4.1.3582.4.1.4.1.2.1.20";
PD_FAILED="1.3.6.1.4.1.3582.4.1.4.1.2.1.24";
PD_WILL_FAIL="1.3.6.1.4.1.3582.4.1.4.1.2.1.23";

VD_STATES="1.3.6.1.4.1.3582.4.1.4.3.1.2.1.5";
PD_STATES="1.3.6.1.4.1.3582.4.1.4.2.1.2.1.10";

NO_ANS_MSG="No answer from lsi card via snmp"


die ()
{
        echo $1
        if test "a$2" != a; then
            echo "$2" 1>&2
            zabbix_sender -s $host -c /etc/zabbix/zabbix_agentd.conf -k snmp-lsi.message -o "$2" > /dev/null
        fi
	exit 0
}


get_val ()
{
    key=$1
    set -- `/usr/bin/snmpget -v1 -c public -t $TIMEOUT $host $key 2>/dev/null`

    if [ -z "$*" ]
    then
        result=-1
    else
	shift
	shift
	shift
	result="$*"
    fi
    echo $result
}


err_c=0
err_w=0

msg=""
degraded_vds=`get_val $VD_DEGRADED`
[ $degraded_vds -lt 0 ] && die 2 $NO_ANS_MSG
if [ $degraded_vds -gt 0 ] 
then
    msg="$msg$degraded_vds degraded VDs, "
    err_c=1
fi

offline_vds=`get_val $VD_OFFLINE`
[ $offline_vds -lt 0 ] && die 2 $NO_ANS_MSG
if [ $offline_vds -gt 0 ] 
then
    msg="$msg$offline_vds offline VDs, "
    err_c=1
fi

failed_pds=`get_val $PD_FAILED`
[ $failed_pds -lt 0 ] && die 2 $NO_ANS_MSG
if [ $failed_pds -gt 0 ] 
then
    msg="$msg$failed_pds failed PDs, "
    err_c=1
fi

will_fail_pds=`get_val $PD_WILL_FAIL`
[ $will_fail_pds -lt 0 ] && die 2 $NO_ANS_MSG
if [ $will_fail_pds -gt 0 ] 
then
    msg="$msg$will_fail_pds PDs are ready to fail, "
    err_w=1
fi

# virtual disks
# offline(0),partially-degraded(1),degraded(2),optimal(3)
# 0, 2 - critical
# 1 - warning
# 3 - ok
i=0
v_msg=""
/usr/bin/snmpwalk -v1 -c public -t $TIMEOUT $host $VD_STATES 2>/dev/null > /tmp/$$.snmp
while read; do
	set -- $REPLY
	if [ -z "$*" ]
	then
		[ $no_answer -eq 0 ] || no_answer=1
	else
		shift
		shift
		shift
		disk_state="$*"
		no_answer=0

		case $disk_state in
                    # offline || degraded
                    0)
                        err_c=1
                        v_msg="$v_msg$i offline"
                        ;;
                    1)
                        err_w=1
                        v_msg="$v_msg$i part-degraded"
                        ;;
                    2)
                        err_c=1
                        v_msg="$v_msg$i degraded"
                        ;;
                    3)
                        ;;
                    *)
                        err_w=1
                        v_msg="$v_msg$i unknown($disk_state)"
                        ;;
		esac
	fi
        i=$((i+1))
done < /tmp/$$.snmp
rm -f /tmp/$$.snmp

msg=${msg%, }

if test "a$v_msg" != a; then
    if test "a$msg" != a; then
        msg="$msg. VD: $v_msg"
    else
        msg="VD: $v_msg"
    fi
fi


# physical disks
# Values: unconfigured-good(0),unconfigured-bad(1),hot-spare(2),offline(16),failed(17),rebuild(20),online(24)"
# 0,2,24 - ok
# 16,20 - warning
# 1,17 - critical
i=0
p_msg=""
/usr/bin/snmpwalk -v1 -c public -t $TIMEOUT $host $PD_STATES 2>/dev/null > /tmp/$$.snmp
while read; do
	set -- $REPLY
	if [ -z "$*" ]
	then
		[ $no_answer -eq 0 ] || no_answer=1
	else
		shift
		shift
		shift
		disk_state="$*"
		no_answer=0

		case $disk_state in
                    # offline || degraded
                    0|2|24)
                        ;;
                    1)
                        err_c=1
                        p_msg="$p_msg$i unconf-bad"
                        ;;
                    17)
                        err_c=1
                        p_msg="$p_msg$i failed"
                        ;;
                    16)
                        err_w=1
                        p_msg="$p_msg$i offline"
                        ;;
                    20)
                        err_w=1
                        p_msg="$p_msg$i rebuild"
                        ;;
                    *)
                        err_w=1
                        p_msg="$p_msg$i unknown($disk_state)"
                        ;;
		esac
	fi
        i=$((i+1))
done < /tmp/$$.snmp
rm -f /tmp/$$.snmp

msg=${msg%, }

if test "a$p_msg" != a; then
    if test "a$msg" != a; then
        msg="$msg. PD: $p_msg"
    else
        msg="PD: $p_msg"
    fi
fi

if test $err_c -eq 0; then
    if test $err_w -eq 0; then
        die 0 ""
    else
        die 1 "$msg"
    fi
else
    die 2 "$msg"
fi

exit
